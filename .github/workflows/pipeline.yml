name: Java

on:
  push:
  workflow_dispatch:

jobs:
  code_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

  build_image:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && success()
    needs: code_check
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Image Version
        id: set_version
        run: echo "IMAGE_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Login no docker hub
        run: sudo docker login -u danielmaria -p ${{secrets.DOCKERHUB_TOKEN}}

      - name: Build docker image
        run: sudo docker build -t danielmaria/postech-produtos:${{ env.IMAGE_VERSION }} .

      - name: Publish image no DockerHub
        run: |
          sudo docker push danielmaria/postech-produtos:${{ env.IMAGE_VERSION }}
          sudo docker tag danielmaria/postech-produtos:${{ env.IMAGE_VERSION }} danielmaria/postech-produtos:latest
          sudo docker push danielmaria/postech-produtos:latest


  deploy_ec2:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && success()
    needs: build_image
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Simulando Pull da Imagem do Docker Hub
        run: echo "docker pull seurepositorio/postech-produtos:latest"

      - name: Simulando Configuração AWS CLI
        run: echo "aws configure set aws_access_key_id {{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key {{ secrets.AWS_SECRET_ACCESS_KEY }} && aws configure set default.region us-east-1"

      - name: Simulando Atualização do Manifesto do K8s
        run: echo "kubectl set image deployment/postech-produtos sua-container=danielmaria/postech-produtos:latest"
